version: 2.1

commands:
  destroy_environments:
    steps:
      - run:
          name: Destroy Slack
          command: |
            aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID}

jobs:
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: create S3 Bucket
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name "${CIRCLE_WORKFLOW_ID:0:7}" \ 
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID:0:7}"
      - run: aws s3 sync . s3://"${CIRCLE_WORKFLOW_ID}" --delete
  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: get pipeline that ID was responsible for the last successful production release.
          command: |
            aws cloudformation \
            list-exports --query "Exports[?Name==\`PipelineID\`].Value" \
            --no-paginate --output text >> pipelineID
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - "./pipelineID"

  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: promote 2 production
          command: |
            aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name production-distro \
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID}"

  clean_up_old_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: clean prev version
          command: |
            aws s3 rm "s3://${OldPipelineID}" --recursive
            aws cloudformation delete-stack --stack-name "${PreviousPipelineID}"

workflows:
  my_workflow:
    jobs:
      - configure_infrastructure
      - smoke_test:
          requires:
            - configure_infrastructure
